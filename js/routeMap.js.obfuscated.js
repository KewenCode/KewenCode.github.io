let colorJN = "7762F1#".split("").reverse().join(""); let colorJNLine = "0bd611#".split("").reverse().join(""); let sizeMap = [0xbe7ea ^ 0xbe7ea, 0xa8c60 ^ 0xa8c60, 0x37603 ^ 0x378c7, 0x853c4 ^ 0x857ae]; let sizeComp = [0xb720d ^ 0xb7269, 0x1972d ^ 0x197ff, 0xb3514 ^ 0xb3708, 0x324d0 ^ 0x324ec]; let sizeLineNo = [0xb6742 ^ 0xb6726, 0x3d011 ^ 0x3d154, 0x127, 0xbe]; let sizeTiHead = [0x64, 0x4f7af ^ 0x4f5b8, 0x1a673 ^ 0x1a46f, 0x5a]; let sizeTi = [0x64, 0x4eea9 ^ 0x4ecd8, 0x21c, 0x908d9 ^ 0x9080b]; let sizePriHead = [0x33233 ^ 0x33257, 0xdb829 ^ 0xdbbad, 0x159, 0x64]; let sizePriLine = [sizeComp[0x63e03 ^ 0x63e03] + sizeComp[0x2], sizePriHead[0x1fbb9 ^ 0x1fbb8] + sizePriHead[0x96788 ^ 0x9678b], sizeComp[0x2] - sizePriHead[0x2], sizePriHead[0x3] / (0xa1ff5 ^ 0xa1fff)]; let lineX = [0x302, 0x686, 0xc918f ^ 0xc9bd5, 0xdde]; let lineY = [0xab028 ^ 0xab11e, 0x136, 0x3eec9 ^ 0x3ef3d, 0x1f4]; let iconScaleSt = [0xc41e6 ^ 0xc40ca, 0.15, 0.25]; let textXY = [lineX]; let lineAngle = 0x25ad8 ^ 0x25ad8; const ramp = new PIXI["\u0041\u0070\u0070\u006c\u0069\u0063\u0061\u0074\u0069\u006f\u006e"]({ "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0043\u006f\u006c\u006f\u0072": "\u0023\u0046\u0046\u0046", "\u0077\u0069\u0064\u0074\u0068": sizeMap[0xecccc ^ 0xeccce], "\u0068\u0065\u0069\u0067\u0068\u0074": sizeMap[0x1db07 ^ 0x1db04], "\u0068\u0065\u006c\u006c\u006f": !![], "\u0061\u006e\u0074\u0069\u0061\u006c\u0069\u0061\u0073": !![], "\u0073\u006f\u0072\u0074\u0061\u0062\u006c\u0065\u0043\u0068\u0069\u006c\u0064\u0072\u0065\u006e": !![] }); let wrap = document["\u0071\u0075\u0065\u0072\u0079\u0053\u0065\u006c\u0065\u0063\u0074\u006f\u0072"]('#map_wrap'); ramp['view']["\u0069\u0064"] = 'jiangnan'; let c_s = ramp['view']["\u0073\u0074\u0079\u006c\u0065"]; const routeMapStage = ramp['stage']; const pixiResize = _0x555318 => { let _0x2a8ff5; return function () { if (_0x2a8ff5) { clearTimeout(_0x2a8ff5); } _0x2a8ff5 = setTimeout(() => { if (window["\u0069\u006e\u006e\u0065\u0072\u0057\u0069\u0064\u0074\u0068"] > window['innerHeight']) { c_s["\u0077\u0069\u0064\u0074\u0068"] = window['innerWidth'] / 1.5 + "xp".split("").reverse().join(""); } else { c_s['width'] = wrap["\u006f\u0066\u0066\u0073\u0065\u0074\u0057\u0069\u0064\u0074\u0068"] + "\u0070\u0078"; } }, _0x555318); }; }; window['addEventListener']("\u0072\u0065\u0073\u0069\u007a\u0065", pixiResize(0x1f4)); if (window['innerWidth'] > window['innerHeight']) { c_s["\u0077\u0069\u0064\u0074\u0068"] = window['innerWidth'] / 1.5 + "xp".split("").reverse().join(""); } else { c_s["\u0077\u0069\u0064\u0074\u0068"] = wrap["\u006f\u0066\u0066\u0073\u0065\u0074\u0057\u0069\u0064\u0074\u0068"] + "xp".split("").reverse().join(""); } wrap["\u0061\u0070\u0070\u0065\u006e\u0064\u0043\u0068\u0069\u006c\u0064"](ramp['view']); loadResource(); loadData(); buildMap(); async function loadResource() { const _0x5d9608 = { 'bundles': [{ 'name': "\u006c\u006f\u0061\u0064\u002d\u0062\u006f\u0078", "\u0061\u0073\u0073\u0065\u0074\u0073": [{ "\u0061\u006c\u0069\u0061\u0073": 'box', 'src': './images/BoxSprite.png' }] }, { 'name': 'load-NJGJ', 'assets': [{ "\u0061\u006c\u0069\u0061\u0073": "\u0050\u0072\u0069\u0063\u0065", "\u0073\u0072\u0063": "\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u0064\u006e\u002e\u006a\u0073\u0064\u0065\u006c\u0069\u0076\u0072\u002e\u006e\u0065\u0074\u002f\u0067\u0068\u002f\u004b\u0065\u0077\u0065\u006e\u0043\u006f\u0064\u0065\u002f\u004b\u0065\u0077\u0065\u006e\u0043\u006f\u0064\u0065\u002e\u0067\u0069\u0074\u0068\u0075\u0062\u002e\u0069\u006f\u002f\u0069\u006d\u0061\u0067\u0065\u0073\u002f\u0042\u0075\u0073\u0050\u0072\u0069\u0063\u0065\u0053\u0070\u0072\u0069\u0074\u0065\u002e\u0070\u006e\u0067" }, { "\u0061\u006c\u0069\u0061\u0073": 'Element', "\u0073\u0072\u0063": 'https://cdn.jsdelivr.net/gh/KewenCode/KewenCode.github.io/images/NJGJSprite.png' }, { 'alias': "\u004d\u0065\u0074\u0072\u006f", 'src': 'https://cdn.jsdelivr.net/gh/KewenCode/KewenCode.github.io/images/MetroSprite.png' }] }, { 'name': 'load-icon', 'assets': [{ 'alias': 'icon_Info', 'src': "\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u0064\u006e\u002e\u006a\u0073\u0064\u0065\u006c\u0069\u0076\u0072\u002e\u006e\u0065\u0074\u002f\u0067\u0068\u002f\u004b\u0065\u0077\u0065\u006e\u0043\u006f\u0064\u0065\u002f\u004b\u0065\u0077\u0065\u006e\u0043\u006f\u0064\u0065\u002e\u0067\u0069\u0074\u0068\u0075\u0062\u002e\u0069\u006f\u0040\u006d\u0061\u0069\u006e\u002f\u0069\u006d\u0061\u0067\u0065\u0073\u002f\u0049\u0063\u006f\u006e\u0053\u0070\u0072\u0069\u0074\u0065\u002e\u0070\u006e\u0067" }, { 'alias': 'logoSvg', 'src': 'https://cdn.jsdelivr.net/gh/KewenCode/KewenCode.github.io@main/images/Logo.svg' }, { 'alias': "\u006c\u006f\u0067\u006f\u0050\u006e\u0067", "\u0073\u0072\u0063": 'https://cdn.jsdelivr.net/gh/KewenCode/KewenCode.github.io@main/images/Logo.png' }] }, { "\u006e\u0061\u006d\u0065": 'load-font', 'assets': [{ 'alias': 'FZZZHONGJW', "\u0073\u0072\u0063": "\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u0064\u006e\u002e\u006a\u0073\u0064\u0065\u006c\u0069\u0076\u0072\u002e\u006e\u0065\u0074\u002f\u0067\u0068\u002f\u004b\u0065\u0077\u0065\u006e\u0043\u006f\u0064\u0065\u002f\u004b\u0065\u0077\u0065\u006e\u0043\u006f\u0064\u0065\u002e\u0067\u0069\u0074\u0068\u0075\u0062\u002e\u0069\u006f\u0040\u006d\u0061\u0069\u006e\u002f\u0066\u006f\u006e\u0074\u002f\u0066\u007a\u007a\u007a\u0068\u006f\u006e\u0067\u006a\u0077\u002e\u0077\u006f\u0066\u0066" }, { 'alias': "\u0046\u005a\u0048\u0054\u004a\u0057", 'src': 'https://cdn.jsdelivr.net/gh/KewenCode/KewenCode.github.io@main/font/fzhtjw.woff' }, { "\u0061\u006c\u0069\u0061\u0073": "\u0059\u0047\u0059\u0058\u0053\u005a\u0049\u0054\u0049", "\u0073\u0072\u0063": "\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u0064\u006e\u002e\u006a\u0073\u0064\u0065\u006c\u0069\u0076\u0072\u002e\u006e\u0065\u0074\u002f\u0067\u0068\u002f\u004b\u0065\u0077\u0065\u006e\u0043\u006f\u0064\u0065\u002f\u004b\u0065\u0077\u0065\u006e\u0043\u006f\u0064\u0065\u002e\u0067\u0069\u0074\u0068\u0075\u0062\u002e\u0069\u006f\u0040\u006d\u0061\u0069\u006e\u002f\u0066\u006f\u006e\u0074\u002f\u0079\u0067\u0079\u0078\u0073\u007a\u0069\u0074\u0069\u002e\u0077\u006f\u0066\u0066" }] }] }; await PIXI["\u0041\u0073\u0073\u0065\u0074\u0073"]['init']({ 'manifest': _0x5d9608 }); } async function buildMap() { await addLogo(); await PIXI["\u0041\u0073\u0073\u0065\u0074\u0073"]["\u006c\u006f\u0061\u0064\u0042\u0075\u006e\u0064\u006c\u0065"]('load-font'); if (!os['isPc']) { await PIXI['Assets']['loadBundle']("elibom-tnof-daol".split("").reverse().join("")); } let _0x4b4507 = await PIXI['Assets']["\u006c\u006f\u0061\u0064\u0042\u0075\u006e\u0064\u006c\u0065"]("xob-daol".split("").reverse().join("")); const _0x363896 = _0x4b4507['box']; _0x363896["\u0066\u0072\u0061\u006d\u0065"] = new PIXI['Rectangle'](0x0, 0x0, 0x3e8, 0x1f4); let _0x7e74d6 = new PIXI["\u0053\u0070\u0072\u0069\u0074\u0065"](_0x363896); _0x7e74d6["\u0073\u0065\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d"](sizeComp[0x0], sizeComp[0xe915f ^ 0xe915e], sizeComp[0x2] / _0x363896["\u0077\u0069\u0064\u0074\u0068"], sizeComp[0x3] / _0x363896["\u0068\u0065\u0069\u0067\u0068\u0074"]); let _0x19d5b3 = new PIXI['Sprite'](_0x363896); _0x19d5b3["\u0073\u0065\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d"](sizeLineNo[0xbbe84 ^ 0xbbe84], sizeLineNo[0x1], sizeLineNo[0xab59f ^ 0xab59d] / _0x363896["\u0077\u0069\u0064\u0074\u0068"], sizeLineNo[0xb0dfb ^ 0xb0df8] / _0x363896['height']); let _0x4d605a = new PIXI['Sprite'](_0x363896); _0x4d605a['setTransform'](sizeTiHead[0x0], sizeTiHead[0x1], sizeTiHead[0x60127 ^ 0x60125] / _0x363896['width'], sizeTiHead[0xd6e82 ^ 0xd6e81] / _0x363896['height']); let _0x457fec = new PIXI["\u0053\u0070\u0072\u0069\u0074\u0065"](_0x363896); _0x457fec['setTransform'](sizePriHead[0x0], sizePriHead[0x5792f ^ 0x5792e], sizePriHead[0x2] / _0x363896["\u0077\u0069\u0064\u0074\u0068"], sizePriHead[0x3] / _0x363896["\u0068\u0065\u0069\u0067\u0068\u0074"]); routeMapStage["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](_0x7e74d6, _0x19d5b3, _0x4d605a, _0x457fec); const _0x50ffc4 = _0x363896["\u0063\u006c\u006f\u006e\u0065"](); _0x50ffc4["\u0066\u0072\u0061\u006d\u0065"] = new PIXI['Rectangle'](0x0, 0x1f4, 0x3e8, 0xc8); let _0x229981 = new PIXI["\u0053\u0070\u0072\u0069\u0074\u0065"](_0x50ffc4); _0x229981['anchor']["\u0073\u0065\u0074"](0x1, 0x1); _0x229981['setTransform'](sizePriLine[0x0], sizePriLine[0x53553 ^ 0x53552], sizePriLine[0x5bfce ^ 0x5bfcc] / _0x363896["\u0077\u0069\u0064\u0074\u0068"], sizePriLine[0x3] / _0x363896['height']); sizePriLineNew = [_0x229981['x'], _0x229981["\u0079"], _0x229981["\u0077\u0069\u0064\u0074\u0068"], _0x229981['height']]; routeMapStage["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](_0x229981); const _0x3c1f8f = new PIXI['Graphics'](); _0x3c1f8f["\u0062\u0065\u0067\u0069\u006e\u0046\u0069\u006c\u006c"]("ededed#".split("").reverse().join("")); _0x3c1f8f['drawRect'](sizeTi[0x59802 ^ 0x59802], sizeTi[0x1], sizeTi[0x2], sizeTi[0x3]); _0x3c1f8f['endFill'](); routeMapStage["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](_0x3c1f8f); const _0x154f17 = (_0x3215ce, _0x340547, _0x493846) => { const _0x2f0b67 = _0x3215ce[0x0] - _0x340547[0x0]; const _0x73e90d = _0x3215ce[0x1] - _0x340547[0x1]; const _0x2cd872 = _0x493846[0x0] - _0x340547[0x0]; const _0x2175d7 = _0x493846[0x77b56 ^ 0x77b57] - _0x340547[0x57080 ^ 0x57081]; const _0xaf2d66 = _0x2f0b67 * _0x2cd872 + _0x73e90d * _0x2175d7; const _0x34017f = Math['sqrt'](_0x2f0b67 * _0x2f0b67 + _0x73e90d * _0x73e90d); const _0x3c5ed3 = Math["\u0073\u0071\u0072\u0074"](_0x2cd872 * _0x2cd872 + _0x2175d7 * _0x2175d7); const _0x3a00e3 = _0xaf2d66 / (_0x34017f * _0x3c5ed3); return Math['acos'](_0x3a00e3) * 0xb4 / Math['PI']; }; const _0x55046c = new PIXI['Graphics'](); _0x55046c['lineStyle'](0x19, colorJNLine); _0x55046c['moveTo'](lineX[0x0], lineY[0x0]); _0x55046c['lineTo'](lineX[0xa7b5a ^ 0xa7b5b], lineY[0x1]); _0x55046c['lineTo'](lineX[0xe2834 ^ 0xe2836], lineY[0x3413e ^ 0x3413c]); _0x55046c['lineTo'](lineX[0x3], lineY[0x3]); routeMapStage['addChild'](_0x55046c); lineAngle = _0x154f17([lineX[0x1], lineY[0x1]], [lineX[0x9832a ^ 0x98328], lineY[0x2]], [lineX[0x1], lineY[0x2]]); routeMapStage['addChild'](await printPrice()); routeMapStage["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](await printTextIcon()); routeMapStage['addChild'](await printService()); routeMapStage['addChild'](await printStation()); } async function addLogo() { let _0x4a2adc = await PIXI["\u0041\u0073\u0073\u0065\u0074\u0073"]['loadBundle']("noci-daol".split("").reverse().join("")); if (os['isPc']) { SCBusFan = new PIXI['Sprite'](_0x4a2adc['logoSvg']); SCBusFan['anchor']['set'](0.5, 0.5); SCBusFan['scale']["\u0073\u0065\u0074"](ramp['view']['height'] / 0xce4); SCBusFan['position']['set'](ramp['view']['width'] / (0x62c6f ^ 0x62c6d), ramp['view']['height'] / 0x2); SCBusFan["\u0061\u006c\u0070\u0068\u0061"] = 0.3; routeMapStage['addChild'](SCBusFan); } else { SCBusFan = new PIXI['Sprite'](_0x4a2adc['logoPng']); SCBusFan["\u0061\u006e\u0063\u0068\u006f\u0072"]['set'](0.5, 0.5); SCBusFan['scale']["\u0073\u0065\u0074"](ramp['view']['height'] / 0x14a); SCBusFan['position']['set'](ramp['view']['width'] / (0x47eb1 ^ 0x47eb3), ramp['view']['height'] / (0x9cbf8 ^ 0x9cbfa)); SCBusFan['alpha'] = 0.3; routeMapStage['addChild'](SCBusFan); } } async function printPrice() { const _0x197925 = new PIXI['Container'](); if (Data["\u0069\u0073\u0053\u0065\u0067"]) { P1 = [0xc8 * Data["\u0070\u0072\u0069\u0063\u0065"][0x0], 0x3cfff ^ 0x3cfff]; P2 = [0xc8 * Data['price'][0x954f9 ^ 0x954f8], 0x95c76 ^ 0x95c76]; Z = [0x12c * 0x2, 0x258]; Y = [0x0, 0x74d45 ^ 0x74f1d]; let _0x5db88d = await PIXI['Assets']['loadBundle']("JGJN-daol".split("").reverse().join("")); const _0x5a4fb7 = _0x5db88d['Price']; _0x5a4fb7["\u0066\u0072\u0061\u006d\u0065"] = new PIXI['Rectangle'](P1[0xe8dcc ^ 0xe8dcc], P1[0xeb575 ^ 0xeb574], 0x8b1c5 ^ 0x8b10d, 0xf0ed1 ^ 0xf0ffd); let _0x2a18c6 = new PIXI['Sprite'](_0x5a4fb7); _0x2a18c6['anchor']['set'](0x1, 0x6d2c9 ^ 0x6d2c8); const _0x562604 = _0x5a4fb7['clone'](); _0x562604['frame'] = new PIXI['Rectangle'](P2[0x0], P2[0x36915 ^ 0x36914], 0xc8, 0x12c); let _0x2ed8ed = new PIXI['Sprite'](_0x562604); _0x2ed8ed['anchor']['set'](0x1c9b8 ^ 0x1c9b9, 0x1); const _0x2bca8a = _0x5a4fb7['clone'](); _0x2bca8a['frame'] = new PIXI['Rectangle'](Y[0x5b657 ^ 0x5b657], Y[0x1], 0x82d69 ^ 0x82c45, 0xf2a8a ^ 0xf2ba6); let _0x2c2461 = new PIXI['Sprite'](_0x2bca8a); _0x2c2461['anchor']['set'](0xe98b5 ^ 0xe98b4, 0xaebd7 ^ 0xaebd6); const _0x35bdaa = _0x5a4fb7['clone'](); _0x35bdaa['frame'] = new PIXI['Rectangle'](Z[0x0], Z[0x283f4 ^ 0x283f5], 0x12c, 0x12c); let _0x168142 = new PIXI['Sprite'](_0x35bdaa); _0x168142['anchor']['set'](0xe7059 ^ 0xe7058, 0xea9a5 ^ 0xea9a4); _0x2c2461["\u0073\u0065\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d"](sizeComp[0x0] + sizeComp[0x2] - 0xa, sizePriHead[0x1] + sizePriHead[0x3] - sizePriLineNew[0x3] * 1.5, (sizePriHead[0xb7df6 ^ 0xb7df5] - sizePriLineNew[0x3] * 0x8) / _0x2c2461["\u0077\u0069\u0064\u0074\u0068"], (sizePriHead[0x3] - sizePriLineNew[0x8e811 ^ 0x8e812] * (0xdf537 ^ 0xdf53e)) / _0x2c2461['height']); _0x2ed8ed['setTransform'](_0x2c2461['position']['x'] - _0x2c2461['width'], _0x2c2461['position']['y'], _0x2c2461['width'] / 0xc8, _0x2c2461['width'] / 0xc8); _0x168142['setTransform'](_0x2ed8ed['position']['x'] - _0x2ed8ed["\u0077\u0069\u0064\u0074\u0068"], _0x2ed8ed['position']['y'], _0x2c2461['width'] / (0x5bb4e ^ 0x5ba62), _0x2c2461['width'] / 0xd2); _0x2a18c6['setTransform'](_0x168142['position']['x'] - _0x168142['width'], _0x168142['position']['y'], _0x2c2461['width'] / 0xc8, _0x2c2461['width'] / (0xb56e0 ^ 0xb5628)); _0x197925['addChild'](_0x2a18c6, _0x2ed8ed, _0x2c2461, _0x168142); } else { PO = [0xc8 * Data['price'][0x902bf ^ 0x902bf], 0x0]; Y = [0x0, 0x97efc ^ 0x97ca4]; let _0x4844bc = await PIXI['Assets']['loadBundle']('load-NJGJ'); const _0x577708 = _0x4844bc['Price']; _0x577708['frame'] = new PIXI['Rectangle'](PO[0x0], PO[0x1], 0xc8, 0x65df7 ^ 0x65cdb); let _0x343db4 = new PIXI['Sprite'](_0x577708); _0x343db4['anchor']['set'](0x1, 0x1); const _0x278827 = _0x577708['clone'](); _0x278827['frame'] = new PIXI['Rectangle'](Y[0xdbfd7 ^ 0xdbfd7], Y[0x1], 0x12c, 0x474b6 ^ 0x4759a); let _0x3eb108 = new PIXI['Sprite'](_0x278827); _0x3eb108['anchor']['set'](0x1, 0x1); _0x3eb108['setTransform'](sizeComp[0x0] + sizeComp[0x2] - (0xe561e ^ 0xe5614), sizePriHead[0x1] + sizePriHead[0x68b14 ^ 0x68b17] - sizePriLineNew[0x8f571 ^ 0x8f572] * 1.5, (sizePriHead[0x3] - sizePriLineNew[0x20768 ^ 0x2076b] * (0x42197 ^ 0x42192)) / _0x3eb108['width'], (sizePriHead[0x3] - sizePriLineNew[0x3] * 0x6) / _0x3eb108['height']); _0x343db4['setTransform'](_0x3eb108['position']['x'] - _0x3eb108["\u0077\u0069\u0064\u0074\u0068"], _0x3eb108['position']['y'], _0x3eb108['width'] / (0x991a2 ^ 0x9916a), _0x3eb108['width'] / 0xc8); _0x197925["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](_0x343db4, _0x3eb108); } return _0x197925; } async function printTextIcon() { const _0x3fa67b = new PIXI['Container'](); const _0x5558e0 = new PIXI['Text'](Data['group'], { "\u0066\u0069\u006c\u006c": colorJN, 'fontFamily': "\u0046\u005a\u005a\u005a\u0048\u004f\u004e\u0047\u004a\u0057", 'fontSize': 0x22, 'fontWeight': "\u0062\u006f\u006c\u0064", 'letterSpacing': 0x0, 'align': 'center' }); _0x5558e0['anchor']['set'](0.5, 0x0); _0x5558e0["\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"]['set'](sizeComp[0x0] + sizeComp[0xe455b ^ 0xe4559] - 0xe6, 0x41a17 ^ 0x41a79); _0x5558e0['style']['letterSpacing'] = _0x5558e0["\u0074\u0065\u0078\u0074"]['length'] < (0x69836 ^ 0x69838) ? (0x7528d ^ 0x752bf) / 0xc * ((0xcb1b1 ^ 0xcb1bf) - _0x5558e0['text']['length']) : 0x897b8 ^ 0x897b8; _0x5558e0['width'] = _0x5558e0['text']['length'] < (0xbd183 ^ 0xbd18d) ? _0x5558e0['text']["\u006c\u0065\u006e\u0067\u0074\u0068"] < (0xeb432 ^ 0xeb43a) ? _0x5558e0['width'] : 0x92d2a ^ 0x92ce6 : 0x1cc; const _0x4fd252 = new PIXI['Text'](Data['groupEn'], { 'fill': colorJN, "\u0066\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079": 'FZZZHONGJW', 'fontSize': 0xf, 'fontWeight': "\u0062\u006f\u006c\u0064", 'letterSpacing': 0x0, "\u0061\u006c\u0069\u0067\u006e": 'center' }); _0x4fd252['anchor']['set'](0.5, 0x630b2 ^ 0x630b2); _0x4fd252["\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"]['set'](sizeComp[0x97f0c ^ 0x97f0c] + sizeComp[0x2] - 0xe6, 0x6e + _0x5558e0['height'] - 0x5); _0x4fd252['width'] = _0x4fd252["\u0074\u0065\u0078\u0074"]['length'] < (0x8283a ^ 0x82817) ? _0x4fd252['width'] : (0x9a46d ^ 0x9a5a1) - 0x5; const _0x42822f = new PIXI["\u0054\u0065\u0078\u0074"](Data["\u0063\u006f\u006d\u0070\u0061\u006e\u0079"], { 'fill': '#FFF', 'fontFamily': 'FZZZHONGJW', 'fontSize': 0x2d, 'fontWeight': "\u0062\u006f\u006c\u0064", 'letterSpacing': 0x4b, 'align': 'center' }); _0x42822f['height'] = 0x3c - 0x4; _0x42822f['style']['letterSpacing'] = _0x42822f['width'] > 0x1f4 ? _0x42822f['style']['letterSpacing'] < 0xc ? 0x4b / 0xb * (0xb - _0x42822f['text']['length']) : 0x0 : 0x4b / 0x7 * (0xb - _0x42822f["\u0074\u0065\u0078\u0074"]['length']); _0x42822f['width'] = _0x42822f['width'] > 0x1f4 ? 0x1f4 : _0x42822f['width']; _0x42822f["\u0061\u006e\u0063\u0068\u006f\u0072"]['set'](0.5); _0x42822f['position']['set'](sizeComp[0x0] + sizeComp[0x2] / 0x2, sizeComp[0x1] + sizeComp[0x3] / 0x2); const _0x2a33a9 = new PIXI['Text']('首末班车服务时间', { 'fill': '#FFF', 'fontFamily': 'FZZZHONGJW', 'fontSize': 0x32, "\u0066\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074": 'bold', 'lineHeight': 0x5f, 'letterSpacing': 0x1b, 'align': "\u0063\u0065\u006e\u0074\u0065\u0072" }); _0x2a33a9['_width'] = 0x1cc; _0x2a33a9['anchor']['set'](0.5); _0x2a33a9['position']["\u0073\u0065\u0074"](sizeTiHead[0x0] + sizeTiHead[0x2] / 0x2, sizeTiHead[0x1] + sizeTiHead[0x3] / 0x2); const _0x1dc56d = new PIXI['Text']('本线路单程票价', { 'fill': '#FFF', "\u0066\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079": 'FZZZHONGJW', "\u0066\u006f\u006e\u0074\u0053\u0069\u007a\u0065": 0x32, 'fontWeight': 'bold', 'lineHeight': 0x8c, 'letterSpacing': 0x5, 'align': 'center' }); _0x1dc56d['width'] = sizePriHead[0x2] * 0.85; _0x1dc56d['anchor']['set'](0.5); _0x1dc56d['position']["\u0073\u0065\u0074"](sizePriHead[0x0] + sizePriHead[0x2] / 0x2, sizePriHead[0x1] + sizePriHead[0x3] / 0x2); _0x3fa67b['addChild'](_0x5558e0, _0x4fd252, _0x42822f, _0x2a33a9, _0x1dc56d); let _0x4f802c = await PIXI['Assets']["\u006c\u006f\u0061\u0064\u0042\u0075\u006e\u0064\u006c\u0065"]('load-icon'); const _0x587f50 = _0x4f802c["\u0069\u0063\u006f\u006e\u005f\u0049\u006e\u0066\u006f"]; _0x587f50['frame'] = new PIXI['Rectangle'](0x0, 0x0, 0x12c, 0x12c); let _0x2d5867 = new PIXI['Sprite'](_0x587f50); _0x2d5867['anchor']['set'](0.5, 0.5); _0x2d5867['setTransform']((_0x5558e0['x'] - 0xe6 - sizeComp[0x0]) / 0x3 + sizeComp[0x0], (_0x5558e0['height'] + _0x4fd252['height']) / 0x2 + _0x5558e0['y'], (_0x5558e0['height'] + _0x4fd252['height']) / 0xdc, (_0x5558e0['height'] + _0x4fd252['height']) / 0xdc); _0x3fa67b['addChild'](_0x2d5867); let _0x3e0be1 = await PIXI['Assets']['loadBundle']('load-NJGJ'); const _0x483251 = _0x3e0be1['Element']; _0x483251['frame'] = new PIXI['Rectangle'](0x0, 0x0, 0x384, 0x96); let _0x4950a0 = new PIXI['Sprite'](_0x483251); _0x4950a0['anchor']['set'](0x1, 0x0); _0x4950a0['setTransform'](lineX[0x3] + 0x5a, (_0x5558e0["\u0068\u0065\u0069\u0067\u0068\u0074"] + _0x4fd252['height']) / 0x2 + _0x5558e0['y'], 1.3, 1.3); _0x3fa67b['addChild'](_0x4950a0); _0x3fa67b["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](_0x497511()); function _0x497511() { const _0xe0edb1 = new PIXI['Container'](); _0xe0edb1['width'] = sizeComp[0x2]; _0xe0edb1['height'] = sizeComp[0x3]; _0xe0edb1["\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"]['set'](sizeLineNo[0x0], sizeLineNo[0x1]); const _0xdcc2eb = _0x182dab => { const _0x86b118 = _0x1a55e5 => { return _0x182dab['match'](_0x1a55e5) ? _0x182dab["\u006d\u0061\u0074\u0063\u0068"](_0x1a55e5)['join']("".split("").reverse().join("")) : "".split("").reverse().join(""); }; let _0xd37958 = _0x86b118(/[0-9]/g); let _0x5e98bd = _0x86b118(/[\a-zA-Z]+/g); let _0x5c2459 = _0x86b118(/[\a-zA-Z0-9]+/g); let _0x24e2fd = _0x86b118(/[\u4e00-\u9fa5,.!"\'（）()]+/g); return { 'num': _0xd37958, "\u006c\u0065\u0074\u0074\u0065\u0072": _0x5e98bd, 'numLetter': _0x5c2459, 'chinese': _0x24e2fd }; }; const _0x540bf0 = _0x1c260f => { const _0x68d1d3 = new PIXI['Text'](_0x1c260f, { "\u0066\u0069\u006c\u006c": '#FFF', 'fontFamily': 'YGYXSZITI,\x20FZZZHONGJW,Times\x20New\x20Roman,\x20Times,\x20serif', 'fontSize': 0xe6, 'align': 'center' }); if (_0x1c260f["\u006d\u0061\u0074\u0063\u0068"](/[\a-zA-Z]+/g)) { _0x68d1d3["\u0077\u0069\u0064\u0074\u0068"] *= 0.8; _0x68d1d3['style']['letterSpacing'] = 0x5; }; if (_0x1c260f['match'](/[\u4e00-\u9fa5,.!"\'（）()]+/g)) { _0x68d1d3['style']['fontSize'] = 0x6e; }; _0x68d1d3['style']["\u006c\u0065\u0074\u0074\u0065\u0072\u0053\u0070\u0061\u0063\u0069\u006e\u0067"] = _0x68d1d3['width'] > 0x104 ? -0x5 : _0x68d1d3['style']['letterSpacing']; _0x68d1d3['width'] = _0x68d1d3['width'] > 0x104 ? 0x104 : _0x68d1d3['width']; _0x68d1d3['height'] = Data['isSeg'] ? _0x68d1d3["\u0068\u0065\u0069\u0067\u0068\u0074"] * 0.8 : _0x68d1d3["\u0068\u0065\u0069\u0067\u0068\u0074"]; _0x68d1d3['anchor']["\u0073\u0065\u0074"](0.5); _0x68d1d3['x'] = sizeLineNo[0x2] / 0x2; _0x68d1d3['y'] = Data['isSeg'] ? sizeLineNo[0x3] / 2.7 : sizeLineNo[0x3] / 2.1; return _0x68d1d3; }; const _0x1f2252 = _0xdcc2eb(Data['lineNo']); let _0x100912 = _0x540bf0(_0x1f2252['numLetter']); let _0x5df2ba = _0x540bf0(_0x1f2252['chinese']); if (_0x1f2252['chinese'] && _0x1f2252["\u006e\u0075\u006d\u004c\u0065\u0074\u0074\u0065\u0072"]) { _0x100912["\u0077\u0069\u0064\u0074\u0068"] *= 0.7; _0x100912['x'] = _0x100912['width'] / 1.8; _0x5df2ba['width'] = sizeLineNo[0x2] - _0x100912['width'] * (1.9 / 1.8); _0x5df2ba["\u0078"] = _0x5df2ba['width'] / 0x2 + _0x100912['width'] * (1.9 / 1.8); _0x5df2ba["\u0079"] = sizeLineNo[0x3] / 1.75; } if (Data["\u0069\u0073\u0053\u0065\u0067"]) { const _0x5434d2 = new PIXI["\u0054\u0065\u0078\u0074"]('[分段计价]', { "\u0066\u0069\u006c\u006c": '#FFF', 'fontFamily': 'MicrosoftYaHei', 'fontSize': 0x28, 'fontWeight': 'bold', 'letterSpacing': 0xa }); _0x5434d2['anchor']['set'](0.5); _0x5434d2['x'] = sizeLineNo[0x2] / 0x2; _0x5434d2['y'] = sizeLineNo[0x3] / 2.7 * 2.2; _0xe0edb1['addChild'](_0x5434d2); } ext = Data['isSeg'] ? '路线路图\x0a及\x0a计价站点' : '路线路图'; const _0x300021 = new PIXI['Text'](ext, { 'fill': colorJN, 'fontFamily': 'MicrosoftYaHei', "\u0066\u006f\u006e\u0074\u0053\u0069\u007a\u0065": 0x46, 'fontWeight': 'bold', 'lineHeight': 0x50, 'align': 'center' }); _0x300021['width'] = _0x300021['width'] > 0xdc ? 0xdc : _0x300021["\u0077\u0069\u0064\u0074\u0068"]; _0x300021['height'] = _0x300021['height'] > 0xd2 ? 0xc8 : _0x300021['height']; _0x300021['anchor']['set'](0.5); _0x300021['position']['set'](sizeLineNo[0x2] + (sizeComp[0x2] - sizeLineNo[0x2]) / 0x2, sizeLineNo[0x3] / 0x2); _0xe0edb1['addChild'](_0x100912, _0x5df2ba, _0x300021); return _0xe0edb1; } return _0x3fa67b; } async function printService() { const _0xe8741 = new PIXI['Container'](); _0xe8741['width'] = sizeTi[0x2]; _0xe8741['height'] = sizeTi[0x3]; _0xe8741['position']['set'](sizeTi[0x0], sizeTi[0x1]); const _0x5226cf = [0xf0, 0xaa]; const _0x58734a = [(sizeTi[0x2] - _0x5226cf[0x0] * 0x2) / 0x3, (sizeTi[0x3] - _0x5226cf[0x1]) / 0x2]; const _0x3bbb6a = new PIXI['TextStyle']({ 'align': 'justify', 'fontFamily': 'FZHTJW', 'fontSize': 0x2d, 'fontWeight': '700', 'lineHeight': 0x32 }); const _0x158de6 = new PIXI['TextStyle']({ 'align': 'right', 'fontFamily': 'FZHTJW', 'fontSize': 0x23, 'fontWeight': '700', 'lineHeight': 0x37 }); const _0x2b0320 = new PIXI['Container'](); _0x2b0320['position']['set'](_0x58734a[0x0], _0x58734a[0x1]); _0xe8741['addChild'](_0x2b0320); _0x11d003(Data['point']['A']['name'], _0x2b0320); _0x32df24(_0x3929e5(Data['point']['A']['startTime']), _0x3929e5(Data['point']['A']['endTime']), _0x2b0320); const _0x2bdc55 = new PIXI['Container'](); _0x2bdc55['position']['set'](_0x58734a[0x0] * 0x2 + _0x5226cf[0x0], _0x58734a[0x1]); _0xe8741['addChild'](_0x2bdc55); _0x11d003(Data['point']['Z']['name'], _0x2bdc55); _0x32df24(_0x3929e5(Data['point']['Z']['startTime']), _0x3929e5(Data['point']['Z']['endTime']), _0x2bdc55); return _0xe8741; function _0x11d003(_0x19aaa3, _0x1be886) { const _0x3a8aa6 = new PIXI['Text'](_0x19aaa3, _0x3bbb6a); _0x3a8aa6['anchor']['set'](0.5, 0x0); _0x3a8aa6['position']['set'](_0x5226cf[0x0] / 0x2, 0x0); if (_0x3a8aa6['width'] > _0x5226cf[0x0]) { _0x3a8aa6['width'] = _0x5226cf[0x0]; } else { const _0x464d99 = _0x3bbb6a['clone'](); _0x464d99['letterSpacing'] = (_0x5226cf[0x0] - _0x3a8aa6['width']) / _0x3a8aa6['text']['length']; _0x3a8aa6['style'] = _0x464d99; _0x3a8aa6['width'] = _0x3a8aa6['width']; } _0x1be886['addChild'](_0x3a8aa6); } function _0x32df24(_0x5b7bde, _0x2a44ba, _0x166685) { const _0x1d1876 = _0x158de6['clone'](); _0x1d1876['align'] = 'left'; const _0x48a153 = _0x5226cf[0x1] - _0x166685['children'][0x0]['height']; const _0x58402 = new PIXI['Text']('首班车：', _0x1d1876); _0x58402['anchor']['set'](0x0, 0x1); _0x58402['position']['set'](_0x5226cf[0x0] / 0xa, _0x48a153); _0x58402['width'] *= 0.8; _0x166685['addChild'](_0x58402); const _0x58c4e5 = new PIXI['Text']('末班车：', _0x1d1876); _0x58c4e5['position']['set'](_0x5226cf[0x0] / 0xa, _0x48a153); _0x58c4e5['width'] *= 0.8; _0x166685['addChild'](_0x58c4e5); const _0xcb25bb = new PIXI['Text'](_0x5b7bde, _0x158de6); _0xcb25bb['anchor']['set'](0x1, 0x1); _0xcb25bb['position']['set'](_0x5226cf[0x0] - _0x5226cf[0x0] / 0xa, _0x48a153); _0xcb25bb['width'] *= 0.8; _0x166685['addChild'](_0xcb25bb); const _0xdf1e0a = new PIXI['Text'](_0x2a44ba, _0x158de6); _0xdf1e0a['anchor']['set'](0x1, 0x0); _0xdf1e0a['position']['set'](_0x5226cf[0x0] - _0x5226cf[0x0] / 0xa, _0x48a153); _0xdf1e0a['width'] *= 0.8; _0x166685['addChild'](_0xdf1e0a); } function _0x3929e5(_0x4311a3) { if (_0x4311a3['slice'](0x0, 0x1) == '0') { return _0x4311a3['slice'](0x1); } else { return _0x4311a3; } } } async function printStation() { const _0x3101b0 = new PIXI["\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072"](); let _0xa3e6f2 = await PIXI['Assets']['loadBundle']('load-NJGJ'); const _0x4a51c6 = _0xa3e6f2['Element']; const _0x27974a = _0xa3e6f2['Metro']; P = _0x6b3229(Data); sizeP = [P['x'], P['y'], P['width'], P['height']]; _0x3101b0['addChild'](P); let _0x1e0a48 = []; const _0x3780e0 = _0x3ad1a7 => { let _0x37ec75 = 0x0; for (let _0x6b982e in _0x3ad1a7) { const _0x42cd5e = (_0x297615, _0x35d74a) => { _0x1e0a48['push'](_0x297615); return _0x35d74a == !![] ? 0x12c * (iconScaleSt[0x2] - iconScaleSt[0x1]) / 0x2 : 0x12c * (iconScaleSt[0x2] - iconScaleSt[0x1]); }; _0x37ec75 = (Data['station'][_0x6b982e]['isStart'] || Data['station'][_0x6b982e]['isEnd']) && Data['station'][_0x6b982e]['isSingle'] ? _0x37ec75 + _0x42cd5e(_0x6b982e, !![]) : _0x37ec75; _0x37ec75 = (Data['station'][_0x6b982e]['isStart'] || Data['station'][_0x6b982e]['isEnd']) && _0x6b982e != 0x0 && _0x6b982e != Object['keys'](Data['station'])['length'] - 0x1 ? _0x37ec75 + _0x42cd5e(_0x6b982e, ![]) : _0x37ec75; } return _0x37ec75; }; const _0x3c3529 = new Map(Object['entries'](Data['station'])); let _0x10b63e = (lineX[0x3] - lineX[0x0] - _0x3780e0(Data['station'])) / (_0x3c3529['size'] - 0x1); let _0x4e5318 = lineY[0x2] - lineY[0x1]; let _0x3c8e89 = 0x0; let _0x18f648 = 0x0; for (let [_0x1c7b4e, _0x28a1ce] of _0x3c3529['entries']()) { _0x18f648 = 0x0; S = await _0xc9cf35(_0x28a1ce); S['position']['set'](0x302 + _0x10b63e * _0x1c7b4e + _0x3c8e89, lineY[0x0]); S['x'] = _0x28a1ce['isStart'] && _0x28a1ce['isSingle'] ? S['x'] + S['width'] / 0x2 : S['x']; S['x'] = _0x28a1ce['isEnd'] && _0x28a1ce['isSingle'] ? S['x'] - S['width'] / 0x2 : S['x']; _0x3c8e89 = (_0x28a1ce['isEnd'] || _0x28a1ce['isStart']) && _0x1e0a48['includes'](_0x1c7b4e) ? _0x3c8e89 + 0x12c * (iconScaleSt[0x2] - iconScaleSt[0x1]) / 0x2 : _0x3c8e89; _0x3c8e89 = (!_0x28a1ce['isEnd'] || !_0x28a1ce['isStart']) && _0x1e0a48['includes'](_0x1c7b4e) ? _0x3c8e89 + 0x12c * (iconScaleSt[0x2] - iconScaleSt[0x1]) : _0x3c8e89; S['y'] = S['x'] > lineX[0x1] && S['x'] < lineX[0x2] ? S['y'] + (S['x'] - lineX[0x1]) / (lineX[0x2] - lineX[0x1]) * _0x4e5318 : S['y']; S['y'] = S['x'] >= lineX[0x2] ? lineY[0x3] : S["\u0079"]; S['angle'] = S['x'] > lineX[0x1] && S['x'] < lineX[0x2] ? lineAngle : S['angle']; _0x18f648 = _0x28a1ce['isSingle'] ? _0x28a1ce['sign']['direction'] ? 0x8 : -0x8 : 0x0; S['y'] += _0x18f648; T = _0x15da2c(_0x28a1ce); T['position']['set'](S['x'], S['y'] + 0x37 - _0x18f648); M = await _0x5b3f24(_0x28a1ce, T['width']); if (M) { T['height'] = T['x'] + T['width'] / 0x2 > sizeP[0x0] && T['x'] - T['width'] / 0x2 < sizeP[0x0] + sizeP[0x2] ? sizeP[0x1] - T['y'] - T['height'] - M['height'] < 0x0 ? sizeP[0x1] - T['y'] - M['height'] : T['height'] : T['height']; T['height'] = T['y'] + T['height'] + M['height'] > sizePriLineNew[0x1] ? sizePriLineNew[0x1] - T['y'] - M['height'] : T['height']; M['position']['set'](T['x'] - T['width'] / 0x2, T['y'] + T['height'] + 0xa); _0x3101b0['addChild'](M); } else { T['height'] = T['x'] + T['width'] / 0x2 > sizeP[0x0] && T['x'] - T['width'] / 0x2 < sizeP[0x0] + sizeP[0x2] ? sizeP[0x1] - T['y'] - T['height'] < 0x0 ? sizeP[0x1] - T["\u0079"] : T['height'] : T['height']; T['height'] = T['y'] + T['height'] > sizePriLineNew[0x1] ? sizePriLineNew[0x1] - T['y'] : T['height']; } _0x3101b0['addChild'](S, T); } return _0x3101b0; async function _0x5b3f24(_0x3c5523, _0x3923d4) { const _0x495d14 = new PIXI['Container'](); if (_0x3c5523['isMetro']) { const _0x2dc0fd = _0x27974a['clone'](); _0x2dc0fd['frame'] = new PIXI['Rectangle'](0x0, 0x3e8, 0xc8, 0xc8); icon = new PIXI["\u0053\u0070\u0072\u0069\u0074\u0065"](_0x2dc0fd); icon['name'] = 'metroIcon'; _0x495d14['addChild'](icon); _0x3c5523['metro']['forEach'](_0x56395b => { _0x495d14['name'] = _0x495d14['name'] ? _0x495d14['name'] + '/' + _0x56395b : _0x56395b; const _0x1d562f = _0x27974a['clone'](); switch (String(_0x56395b)) { case '1': case '2': case '3': case '4': case '5': case '6': _0x1d562f['frame'] = new PIXI['Rectangle'](0xc8 * (Number(_0x56395b) - 0x1), 0x0, 0xc8, 0xc8); break; case "1S".split("").reverse().join(""): case "2S".split("").reverse().join(""): case "3S".split("").reverse().join(""): case 'S4': case 'S5': case 'S6': _0x1d562f['frame'] = new PIXI['Rectangle'](0xc8 * (Number(_0x56395b['replace']("\u0053", '')) - 0x1), 0x258, 0xc8, 0xc8); break; case "7S".split("").reverse().join(""): case 'S8': case "9S".split("").reverse().join(""): _0x1d562f['frame'] = new PIXI['Rectangle'](0xc8 * (Number(_0x56395b['replace']('S', '')) - 0x7), 0x320, 0xc8, 0xc8); break; case '7': case '8': case '9': case '10': case '11': case "21".split("").reverse().join(""): _0x1d562f['frame'] = new PIXI["\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065"](0xc8 * (Number(_0x56395b) - 0x7), 0xc8, 0xc8, 0xc8); break; case "31".split("").reverse().join(""): case "41".split("").reverse().join(""): case "51".split("").reverse().join(""): case "61".split("").reverse().join(""): case '17': case '18': _0x1d562f['frame'] = new PIXI['Rectangle'](0xc8 * (Number(_0x56395b) - 0xd), 0x190, 0xc8, 0xc8); break; }icon = new PIXI['Sprite'](_0x1d562f); icon['name'] = 'line' + _0x56395b; icon['position']['set'](0x0, _0x495d14['height']); _0x495d14['addChild'](icon); }); _0x495d14['scale']['set'](_0x3923d4 / 0xc8); return _0x495d14; } } async function _0xc9cf35(_0x385e2c) { if (_0x385e2c['isSingle']) { let _0x4db8ab = [0x0, 0x1f4, 0x15e, 0xc8]; _0x4db8ab[0x0] = _0x385e2c['isStart'] || _0x385e2c['sign']['convert'] ? 0x15e : _0x4db8ab[0x0]; _0x4db8ab[0x1] = _0x385e2c['sign']['direction'] == 0x1 ? _0x4db8ab[0x1] + 0xc8 : _0x4db8ab[0x1]; const _0x299f0c = _0x4a51c6['clone'](); _0x299f0c['frame'] = new PIXI['Rectangle'](_0x4db8ab[0x0], _0x4db8ab[0x1], _0x4db8ab[0x2], _0x4db8ab[0x3]); icon = new PIXI['Sprite'](_0x299f0c); icon['anchor']['set'](0.5, 0x0); if (_0x385e2c['sign']['direction'] == 0x0) { icon['anchor']['set'](0.5, 0x1); } icon['scale']['set'](0.15); if (_0x385e2c['isStart'] || _0x385e2c['isEnd']) { icon['scale']['set'](0.25); } return icon; } if (_0x385e2c['isStart'] || _0x385e2c['isEnd']) { let _0x3611c0 = [0x0, 0x96, 0x15e, 0x15e]; _0x3611c0[0x0] = typeof _0x385e2c['sign'] !== "\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064" && _0x385e2c['sign']['convert'] ? 0x15e : _0x3611c0[0x0]; const _0x429dd2 = _0x4a51c6['clone'](); _0x429dd2['frame'] = new PIXI['Rectangle'](_0x3611c0[0x0], _0x3611c0[0x1], _0x3611c0[0x2], _0x3611c0[0x3]); icon = new PIXI['Sprite'](_0x429dd2); icon['anchor']['set'](0.5); if (typeof _0x385e2c['sign'] !== "denifednu".split("").reverse().join("") && _0x385e2c['sign']['direction'] == 0x0 || _0x385e2c['isEnd']) { icon['angle'] = 0xb4; } icon['scale']['set'](0.25); return icon; } let _0x168f49 = [0x2bc, 0x96, 0x15e, 0x15e]; const _0x35e569 = _0x4a51c6['clone'](); _0x35e569['frame'] = new PIXI["\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065"](_0x168f49[0x0], _0x168f49[0x1], _0x168f49[0x2], _0x168f49[0x3]); icon = new PIXI['Sprite'](_0x35e569); icon['anchor']['set'](0.5); icon['scale']['set'](0.15); if (_0x385e2c['isStart'] || _0x385e2c['isEnd']) { icon['scale']['set'](0.25); } return icon; } function _0x15da2c(_0x3b838a) { const _0x432ef4 = new PIXI['TextStyle']({ 'align': "\u0063\u0065\u006e\u0074\u0065\u0072", 'fill': colorJN, 'fontFamily': 'FZHTJW,SimHei', 'fontSize': 0x30, 'lineHeight': 0x30 }); const _0x2864ac = _0xad9a18 => { _0xad9a18 = _0xad9a18['replace']('（', '︵')["\u0072\u0065\u0070\u006c\u0061\u0063\u0065"]('）', '︶')['replace']('(', '︵')['replace'](')', '︶'); return _0xad9a18['split']('')['join']('\x0a'); }; const _0x39413a = new PIXI['Text'](_0x2864ac(_0x3b838a['name']), _0x432ef4); _0x39413a['anchor']['set'](0.5, 0x0); if (_0x3b838a['isStart'] || _0x3b838a['isEnd'] || _0x3b838a['text'] && _0x3b838a['text']['color']) { _0x39413a['style']['fill'] = (_0x3b838a['text'] ? _0x3b838a["\u0074\u0065\u0078\u0074"]['color'] : ![]) || 'red'; } return _0x39413a; } function _0x6b3229(_0x189fd) { const _0x3272ee = new PIXI['Container'](); _0x3272ee['position']['set'](0x384, 0x352); const _0x43dffe = new PIXI['TextStyle']({ 'align': 'center', 'fill': 'red', 'fontFamily': 'FZHTJW,SimHei', 'fontSize': 0x41 }); const _0x45810d = new PIXI['Text']('说明:\x20', _0x43dffe); const _0x3e03c6 = new PIXI['Text']('\x20单向停靠站点', _0x43dffe); const _0x5a47cd = new PIXI['Text']("\u70B9\u7AD9\u94C1\u5730\u4E58\u6362 ".split("").reverse().join(""), _0x43dffe); const _0x320373 = _0x4a51c6['clone'](); _0x320373['frame'] = new PIXI['Rectangle'](0x2bc, 0x1f4, 0x15e, 0xc8); icon1 = new PIXI['Sprite'](_0x320373); icon1['position']['set'](_0x45810d['width'], _0x45810d['height'] / 0x8); icon1['scale']['set'](_0x45810d['height'] / 0x12c); const _0x115db2 = _0x27974a['clone'](); _0x115db2['frame'] = new PIXI['Rectangle'](0x0, 0x3e8, 0xc8, 0xc8); icon2 = new PIXI['Sprite'](_0x115db2); icon2['anchor']['set'](0.5, 0x0); icon2['position']['set'](_0x45810d['width'] + icon1['width'] / 0x2, _0x45810d['height']); icon2['scale']['set'](_0x45810d['height'] / 0xc8); _0x3e03c6['position']['set'](_0x45810d['width'] + icon1['width'], 0x0); _0x5a47cd['position']['set'](_0x45810d['width'] + icon1['width'], _0x45810d['height']); _0x3272ee['addChild'](_0x45810d, icon1, icon2, _0x3e03c6, _0x5a47cd); return _0x3272ee; } } function loadData() { _0x1c3008(); if (Data['isSeg']) _0x1b7aed(); function _0x1b7aed() { sizeLineNo[0x1] = sizeLineNo[0x1] - 0x23; sizeLineNo[0x3] = sizeLineNo[0x3] + 0x23; sizePriHead[0x2] = 0xfa; sizePriLine = [sizeComp[0x0] + sizeComp[0x2], sizePriHead[0x1] + sizePriHead[0x3], sizeComp[0x2] - sizePriHead[0x2], sizePriHead[0x3] / 0xa]; } function _0x1c3008() { sizeLineNo = [0x64, 0x145, 0x127, 0xbe]; sizePriHead = [0x64, 0x384, 0x159, 0x64]; sizePriLine = [sizeComp[0x0] + sizeComp[0x2], sizePriHead[0x1] + sizePriHead[0x3], sizeComp[0x2] - sizePriHead[0x2], sizePriHead[0x3] / 0xa]; } } function pixiClear() { ramp['stage']['removeChildren'](); loadData(); buildMap(); }