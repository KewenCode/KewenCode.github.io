let colorJN = "\u0023\u0031\u0046\u0032\u0036\u0037\u0037"; let colorJNLine = "0bd611#".split("").reverse().join(""); let sizeMap = [0x18d04 ^ 0x18d04, 0x3d346 ^ 0x3d346, 0x33689 ^ 0x3384d, 0x714ea ^ 0x71080]; let sizeComp = [0x825f3 ^ 0x82597, 0xb616c ^ 0xb61be, 0x786b5 ^ 0x784a9, 0x60c55 ^ 0x60c69]; let sizeLineNo = [0xf1424 ^ 0xf1440, 0x767c2 ^ 0x76687, 0x127, 0xbe]; let sizeTiHead = [0xe84ca ^ 0xe84ae, 0x217, 0x21c, 0x364b8 ^ 0x364e2]; let sizeTi = [0x64, 0x271, 0x21c, 0xd2]; let sizePriHead = [0xd05d2 ^ 0xd05b6, 0x384, 0x8a0a7 ^ 0x8a1fe, 0xda1ec ^ 0xda188]; let sizePriLine = [sizeComp[0x0] + sizeComp[0x2eef8 ^ 0x2eefa], sizePriHead[0x1] + sizePriHead[0xd0521 ^ 0xd0522], sizeComp[0x6dbe0 ^ 0x6dbe2] - sizePriHead[0x2], sizePriHead[0x3] / (0xd4853 ^ 0xd4859)]; let lineX = [0x302, 0x686, 0xa5a, 0xdde]; let lineY = [0xdd1b5 ^ 0xdd083, 0xd3077 ^ 0xd3141, 0x1f4, 0xbcf9d ^ 0xbce69]; let iconScaleSt = [0x12c, 0.15, 0.25]; let textXY = [lineX]; let lineAngle = 0x0; const ramp = new PIXI["\u0041\u0070\u0070\u006c\u0069\u0063\u0061\u0074\u0069\u006f\u006e"]({ "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0043\u006f\u006c\u006f\u0072": "\u0023\u0046\u0046\u0046", "\u0077\u0069\u0064\u0074\u0068": sizeMap[0x2], "\u0068\u0065\u0069\u0067\u0068\u0074": sizeMap[0x3], "\u0068\u0065\u006c\u006c\u006f": !![], "\u0061\u006e\u0074\u0069\u0061\u006c\u0069\u0061\u0073": !![], "\u0073\u006f\u0072\u0074\u0061\u0062\u006c\u0065\u0043\u0068\u0069\u006c\u0064\u0072\u0065\u006e": !![] }); let wrap = document["\u0071\u0075\u0065\u0072\u0079\u0053\u0065\u006c\u0065\u0063\u0074\u006f\u0072"]("parw_pam#".split("").reverse().join("")); ramp['view']["\u0069\u0064"] = "nangnaij".split("").reverse().join(""); let c_s = ramp['view']['style']; const routeMapStage = ramp['stage']; const pixiResize = _0x17513f => { let _0x404c44; return function () { if (_0x404c44) { clearTimeout(_0x404c44); } _0x404c44 = setTimeout(() => { if (window['innerWidth'] > window['innerHeight']) { c_s["\u0077\u0069\u0064\u0074\u0068"] = window['innerWidth'] / 1.5 + "xp".split("").reverse().join(""); } else { c_s['width'] = wrap['offsetWidth'] + "\u0070\u0078"; } }, _0x17513f); }; }; window['addEventListener']("eziser".split("").reverse().join(""), pixiResize(0x1f4)); if (window["\u0069\u006e\u006e\u0065\u0072\u0057\u0069\u0064\u0074\u0068"] > window["\u0069\u006e\u006e\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"]) { c_s["\u0077\u0069\u0064\u0074\u0068"] = window["\u0069\u006e\u006e\u0065\u0072\u0057\u0069\u0064\u0074\u0068"] / 1.5 + "xp".split("").reverse().join(""); } else { c_s['width'] = wrap["\u006f\u0066\u0066\u0073\u0065\u0074\u0057\u0069\u0064\u0074\u0068"] + "\u0070\u0078"; } wrap['appendChild'](ramp['view']); loadResource(); loadData(); buildMap(); async function loadResource() { const _0x538e4d = { 'bundles': [{ 'name': "\u006c\u006f\u0061\u0064\u002d\u0062\u006f\u0078", 'assets': [{ 'alias': "\u0062\u006f\u0078", 'src': './images/BoxSprite.png' }] }, { 'name': 'load-NJGJ', 'assets': [{ "\u0061\u006c\u0069\u0061\u0073": 'Price', "\u0073\u0072\u0063": './images/BusPriceSprite.png' }, { "\u0061\u006c\u0069\u0061\u0073": "\u0045\u006c\u0065\u006d\u0065\u006e\u0074", "\u0073\u0072\u0063": './images/NJGJSprite.png' }, { 'alias': "\u004d\u0065\u0074\u0072\u006f", "\u0073\u0072\u0063": './images/MetroSprite.png' }] }, { "\u006e\u0061\u006d\u0065": 'load-icon', 'assets': [{ 'alias': "\u0069\u0063\u006f\u006e\u005f\u0049\u006e\u0066\u006f", "\u0073\u0072\u0063": "\u002e\u002f\u0069\u006d\u0061\u0067\u0065\u0073\u002f\u0049\u0063\u006f\u006e\u0053\u0070\u0072\u0069\u0074\u0065\u002e\u0070\u006e\u0067" }, { "\u0061\u006c\u0069\u0061\u0073": 'logoSvg', "\u0073\u0072\u0063": "\u002e\u002f\u0069\u006d\u0061\u0067\u0065\u0073\u002f\u004c\u006f\u0067\u006f\u002e\u0073\u0076\u0067" }, { "\u0061\u006c\u0069\u0061\u0073": 'logoPng', 'src': "\u002e\u002f\u0069\u006d\u0061\u0067\u0065\u0073\u002f\u004c\u006f\u0067\u006f\u002e\u0070\u006e\u0067" }] }, { "\u006e\u0061\u006d\u0065": "\u006c\u006f\u0061\u0064\u002d\u0066\u006f\u006e\u0074", 'assets': [{ "\u0061\u006c\u0069\u0061\u0073": 'FZZZHONGJW', 'src': './font/fzzzhongjw.woff' }, { 'alias': "\u0046\u005a\u0048\u0054\u004a\u0057", 'src': "\u002e\u002f\u0066\u006f\u006e\u0074\u002f\u0066\u007a\u0068\u0074\u006a\u0077\u002e\u0077\u006f\u0066\u0066" }, { 'alias': 'YGYXSZITI', "\u0073\u0072\u0063": "\u002e\u002f\u0066\u006f\u006e\u0074\u002f\u0079\u0067\u0079\u0078\u0073\u007a\u0069\u0074\u0069\u002e\u0077\u006f\u0066\u0066" }] }] }; await PIXI["\u0041\u0073\u0073\u0065\u0074\u0073"]["\u0069\u006e\u0069\u0074"]({ 'manifest': _0x538e4d }); } async function buildMap() { await addLogo(); await PIXI["\u0041\u0073\u0073\u0065\u0074\u0073"]["\u006c\u006f\u0061\u0064\u0042\u0075\u006e\u0064\u006c\u0065"]("tnof-daol".split("").reverse().join("")); let _0x13d61a = await PIXI['Assets']['loadBundle']("\u006c\u006f\u0061\u0064\u002d\u0062\u006f\u0078"); const _0x4701d3 = _0x13d61a["\u0062\u006f\u0078"]; _0x4701d3["\u0066\u0072\u0061\u006d\u0065"] = new PIXI['Rectangle'](0xb868f ^ 0xb868f, 0x0, 0x3e8, 0x1f4); let _0x382ad9 = new PIXI['Sprite'](_0x4701d3); _0x382ad9['setTransform'](sizeComp[0x0], sizeComp[0x1], sizeComp[0x518ca ^ 0x518c8] / _0x4701d3['width'], sizeComp[0xd4fc9 ^ 0xd4fca] / _0x4701d3["\u0068\u0065\u0069\u0067\u0068\u0074"]); let _0x5a00d3 = new PIXI['Sprite'](_0x4701d3); _0x5a00d3['setTransform'](sizeLineNo[0x2d543 ^ 0x2d543], sizeLineNo[0x1], sizeLineNo[0x2] / _0x4701d3["\u0077\u0069\u0064\u0074\u0068"], sizeLineNo[0xa4199 ^ 0xa419a] / _0x4701d3['height']); let _0x1dc754 = new PIXI["\u0053\u0070\u0072\u0069\u0074\u0065"](_0x4701d3); _0x1dc754['setTransform'](sizeTiHead[0xd5adc ^ 0xd5adc], sizeTiHead[0x80e27 ^ 0x80e26], sizeTiHead[0x7d557 ^ 0x7d555] / _0x4701d3['width'], sizeTiHead[0x3] / _0x4701d3['height']); let _0x1ecc53 = new PIXI["\u0053\u0070\u0072\u0069\u0074\u0065"](_0x4701d3); _0x1ecc53['setTransform'](sizePriHead[0x0], sizePriHead[0x1], sizePriHead[0x92523 ^ 0x92521] / _0x4701d3['width'], sizePriHead[0xb5852 ^ 0xb5851] / _0x4701d3['height']); routeMapStage["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](_0x382ad9, _0x5a00d3, _0x1dc754, _0x1ecc53); const _0x31eee6 = _0x4701d3['clone'](); _0x31eee6['frame'] = new PIXI['Rectangle'](0x0, 0x1f4, 0x3e8, 0xba4b7 ^ 0xba47f); let _0x2d199a = new PIXI['Sprite'](_0x31eee6); _0x2d199a["\u0061\u006e\u0063\u0068\u006f\u0072"]['set'](0x1, 0x1); _0x2d199a["\u0073\u0065\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d"](sizePriLine[0x0], sizePriLine[0xc26e3 ^ 0xc26e2], sizePriLine[0x2d216 ^ 0x2d214] / _0x4701d3['width'], sizePriLine[0x3] / _0x4701d3["\u0068\u0065\u0069\u0067\u0068\u0074"]); sizePriLineNew = [_0x2d199a["\u0078"], _0x2d199a["\u0079"], _0x2d199a["\u0077\u0069\u0064\u0074\u0068"], _0x2d199a['height']]; routeMapStage["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](_0x2d199a); const _0x3a3936 = new PIXI['Graphics'](); _0x3a3936['beginFill']("ededed#".split("").reverse().join("")); _0x3a3936["\u0064\u0072\u0061\u0077\u0052\u0065\u0063\u0074"](sizeTi[0x6249f ^ 0x6249f], sizeTi[0x1], sizeTi[0x2], sizeTi[0x3]); _0x3a3936["\u0065\u006e\u0064\u0046\u0069\u006c\u006c"](); routeMapStage['addChild'](_0x3a3936); const _0x257756 = (_0x49f9c9, _0x5e9d49, _0x3c92eb) => { const _0x1004d2 = _0x49f9c9[0xaaa19 ^ 0xaaa19] - _0x5e9d49[0x0]; const _0x464b1e = _0x49f9c9[0x1] - _0x5e9d49[0x5a878 ^ 0x5a879]; const _0x3a5613 = _0x3c92eb[0x89765 ^ 0x89765] - _0x5e9d49[0x0]; const _0x572c91 = _0x3c92eb[0xe13a7 ^ 0xe13a6] - _0x5e9d49[0x1]; const _0x267f7c = _0x1004d2 * _0x3a5613 + _0x464b1e * _0x572c91; const _0xbdbe21 = Math['sqrt'](_0x1004d2 * _0x1004d2 + _0x464b1e * _0x464b1e); const _0xa3100b = Math['sqrt'](_0x3a5613 * _0x3a5613 + _0x572c91 * _0x572c91); const _0x44b2a7 = _0x267f7c / (_0xbdbe21 * _0xa3100b); return Math["\u0061\u0063\u006f\u0073"](_0x44b2a7) * (0x22d39 ^ 0x22d8d) / Math['PI']; }; const _0x41a2e0 = new PIXI['Graphics'](); _0x41a2e0['lineStyle'](0x19, colorJNLine); _0x41a2e0['moveTo'](lineX[0x89b75 ^ 0x89b75], lineY[0x0]); _0x41a2e0['lineTo'](lineX[0x6d977 ^ 0x6d976], lineY[0x43807 ^ 0x43806]); _0x41a2e0["\u006c\u0069\u006e\u0065\u0054\u006f"](lineX[0x2], lineY[0x2]); _0x41a2e0["\u006c\u0069\u006e\u0065\u0054\u006f"](lineX[0x3], lineY[0x26810 ^ 0x26813]); routeMapStage['addChild'](_0x41a2e0); lineAngle = _0x257756([lineX[0x1], lineY[0x1]], [lineX[0x2], lineY[0x4b484 ^ 0x4b486]], [lineX[0xb3afa ^ 0xb3afb], lineY[0x8ecde ^ 0x8ecdc]]); routeMapStage['addChild'](await printPrice()); routeMapStage["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](await printTextIcon()); routeMapStage['addChild'](await printService()); routeMapStage['addChild'](await printStation()); } async function addLogo() { let _0x325a8b = await PIXI['Assets']['loadBundle']("noci-daol".split("").reverse().join("")); if (os['isPc']) { SCBusFan = new PIXI['Sprite'](_0x325a8b['logoSvg']); SCBusFan["\u0061\u006e\u0063\u0068\u006f\u0072"]['set'](0.5, 0.5); SCBusFan['scale']['set'](ramp['view']['height'] / (0x9bbf9 ^ 0x9b71d)); SCBusFan['position']['set'](ramp['view']['width'] / 0x2, ramp['view']['height'] / 0x2); SCBusFan['alpha'] = 0.3; routeMapStage["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](SCBusFan); } else { SCBusFan = new PIXI['Sprite'](_0x325a8b["\u006c\u006f\u0067\u006f\u0050\u006e\u0067"]); SCBusFan['anchor']['set'](0.5, 0.5); SCBusFan['scale']['set'](ramp['view']['height'] / 0x14a); SCBusFan['position']['set'](ramp['view']["\u0077\u0069\u0064\u0074\u0068"] / (0x48d49 ^ 0x48d4b), ramp['view']['height'] / (0xbbf42 ^ 0xbbf40)); SCBusFan['alpha'] = 0.3; routeMapStage['addChild'](SCBusFan); } } async function printPrice() { const _0x45b24f = new PIXI['Container'](); if (Data['isSeg']) { P1 = [0xc8 * Data['price'][0x0], 0x80e4f ^ 0x80e4f]; P2 = [0xc8 * Data['price'][0x9e5a2 ^ 0x9e5a3], 0x0]; Z = [(0x4bcc4 ^ 0x4bde8) * 0x2, 0x258]; Y = [0x494b4 ^ 0x494b4, 0x258]; let _0x5a0120 = await PIXI["\u0041\u0073\u0073\u0065\u0074\u0073"]['loadBundle']("JGJN-daol".split("").reverse().join("")); const _0x58e1a1 = _0x5a0120['Price']; _0x58e1a1['frame'] = new PIXI['Rectangle'](P1[0xc2c95 ^ 0xc2c95], P1[0x34cff ^ 0x34cfe], 0x46e55 ^ 0x46e9d, 0x29b15 ^ 0x29a39); let _0x46e979 = new PIXI['Sprite'](_0x58e1a1); _0x46e979['anchor']['set'](0x77d8c ^ 0x77d8d, 0x61202 ^ 0x61203); const _0x52197f = _0x58e1a1['clone'](); _0x52197f['frame'] = new PIXI["\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065"](P2[0x0], P2[0x1], 0x2d08d ^ 0x2d045, 0x4b0d4 ^ 0x4b1f8); let _0x8cf869 = new PIXI['Sprite'](_0x52197f); _0x8cf869['anchor']['set'](0x881a0 ^ 0x881a1, 0x1); const _0x1f5d7e = _0x58e1a1['clone'](); _0x1f5d7e['frame'] = new PIXI['Rectangle'](Y[0xed5e5 ^ 0xed5e5], Y[0x1], 0x12c, 0x97ab7 ^ 0x97b9b); let _0x115519 = new PIXI['Sprite'](_0x1f5d7e); _0x115519['anchor']['set'](0xf3c3d ^ 0xf3c3c, 0x1); const _0x1eacfa = _0x58e1a1['clone'](); _0x1eacfa['frame'] = new PIXI['Rectangle'](Z[0x7ad4d ^ 0x7ad4d], Z[0xbf345 ^ 0xbf344], 0x12c, 0x12c); let _0x1ffd98 = new PIXI['Sprite'](_0x1eacfa); _0x1ffd98['anchor']["\u0073\u0065\u0074"](0x1, 0x36020 ^ 0x36021); _0x115519['setTransform'](sizeComp[0x0] + sizeComp[0x2] - 0xa, sizePriHead[0x1e9a5 ^ 0x1e9a4] + sizePriHead[0x3] - sizePriLineNew[0x3] * 1.5, (sizePriHead[0x3] - sizePriLineNew[0x3] * (0xc7c32 ^ 0xc7c3a)) / _0x115519['width'], (sizePriHead[0x3] - sizePriLineNew[0x3] * 0x9) / _0x115519["\u0068\u0065\u0069\u0067\u0068\u0074"]); _0x8cf869['setTransform'](_0x115519['position']['x'] - _0x115519["\u0077\u0069\u0064\u0074\u0068"], _0x115519['position']['y'], _0x115519['width'] / 0xc8, _0x115519['width'] / 0xc8); _0x1ffd98['setTransform'](_0x8cf869['position']['x'] - _0x8cf869['width'], _0x8cf869['position']['y'], _0x115519['width'] / 0x12c, _0x115519["\u0077\u0069\u0064\u0074\u0068"] / 0xd2); _0x46e979["\u0073\u0065\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d"](_0x1ffd98["\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"]["\u0078"] - _0x1ffd98['width'], _0x1ffd98['position']['y'], _0x115519['width'] / 0xc8, _0x115519['width'] / 0xc8); _0x45b24f['addChild'](_0x46e979, _0x8cf869, _0x115519, _0x1ffd98); } else { PO = [(0xc0222 ^ 0xc02ea) * Data['price'][0x0], 0x0]; Y = [0xd1a01 ^ 0xd1a01, 0x258]; let _0x4418f7 = await PIXI['Assets']['loadBundle']('load-NJGJ'); const _0x4badee = _0x4418f7['Price']; _0x4badee['frame'] = new PIXI["\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065"](PO[0x88f20 ^ 0x88f20], PO[0x466be ^ 0x466bf], 0xc8, 0xac13f ^ 0xac013); let _0x3c2fc3 = new PIXI['Sprite'](_0x4badee); _0x3c2fc3['anchor']['set'](0x1, 0x1); const _0x1d7992 = _0x4badee['clone'](); _0x1d7992['frame'] = new PIXI["\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065"](Y[0x0], Y[0xc1a8a ^ 0xc1a8b], 0x7b037 ^ 0x7b11b, 0x52720 ^ 0x5260c); let _0x569b89 = new PIXI['Sprite'](_0x1d7992); _0x569b89['anchor']['set'](0x617b3 ^ 0x617b2, 0x1); _0x569b89['setTransform'](sizeComp[0x0] + sizeComp[0x2] - 0xa, sizePriHead[0x1] + sizePriHead[0xeb8da ^ 0xeb8d9] - sizePriLineNew[0x80f8e ^ 0x80f8d] * 1.5, (sizePriHead[0xed5d6 ^ 0xed5d5] - sizePriLineNew[0x3] * 0x5) / _0x569b89["\u0077\u0069\u0064\u0074\u0068"], (sizePriHead[0x3] - sizePriLineNew[0x52a8a ^ 0x52a89] * (0x45100 ^ 0x45106)) / _0x569b89['height']); _0x3c2fc3['setTransform'](_0x569b89['position']['x'] - _0x569b89['width'], _0x569b89["\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"]["\u0079"], _0x569b89['width'] / 0xc8, _0x569b89['width'] / 0xc8); _0x45b24f['addChild'](_0x3c2fc3, _0x569b89); } return _0x45b24f; } async function printTextIcon() { const _0x65b651 = new PIXI['Container'](); const _0x16ffbf = new PIXI['Text'](Data['group'], { 'fill': colorJN, 'fontFamily': 'FZZZHONGJW', 'fontSize': 0x22, "\u0066\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074": 'bold', "\u006c\u0065\u0074\u0074\u0065\u0072\u0053\u0070\u0061\u0063\u0069\u006e\u0067": 0x0, 'align': 'center' }); _0x16ffbf['anchor']['set'](0.5, 0x49973 ^ 0x49973); _0x16ffbf['position']['set'](sizeComp[0x851c0 ^ 0x851c0] + sizeComp[0x2] - (0x964dc ^ 0x9643a), 0x6e); _0x16ffbf['style']['letterSpacing'] = _0x16ffbf['text']['length'] < (0x78f7f ^ 0x78f71) ? 0x32 / (0xd8080 ^ 0xd808c) * ((0xe3ea7 ^ 0xe3ea9) - _0x16ffbf['text']['length']) : 0x2b60a ^ 0x2b60a; _0x16ffbf['width'] = _0x16ffbf['text']['length'] < (0x7dee8 ^ 0x7dee6) ? _0x16ffbf["\u0074\u0065\u0078\u0074"]['length'] < 0x8 ? _0x16ffbf['width'] : 0x1cc : 0x7cbb2 ^ 0x7ca7e; const _0xe3bb4 = new PIXI['Text'](Data['groupEn'], { 'fill': colorJN, "\u0066\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079": 'FZZZHONGJW', "\u0066\u006f\u006e\u0074\u0053\u0069\u007a\u0065": 0xf, 'fontWeight': 'bold', 'letterSpacing': 0x0, 'align': 'center' }); _0xe3bb4['anchor']['set'](0.5, 0x0); _0xe3bb4['position']["\u0073\u0065\u0074"](sizeComp[0x0] + sizeComp[0x2] - 0xe6, 0x6e + _0x16ffbf['height'] - 0x5); _0xe3bb4['width'] = _0xe3bb4['text']['length'] < 0x2d ? _0xe3bb4["\u0077\u0069\u0064\u0074\u0068"] : 0x1cc - 0x5; const _0x224b22 = new PIXI["\u0054\u0065\u0078\u0074"](Data["\u0063\u006f\u006d\u0070\u0061\u006e\u0079"], { "\u0066\u0069\u006c\u006c": '#FFF', "\u0066\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079": "\u0046\u005a\u005a\u005a\u0048\u004f\u004e\u0047\u004a\u0057", 'fontSize': 0x2d, "\u0066\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074": 'bold', "\u006c\u0065\u0074\u0074\u0065\u0072\u0053\u0070\u0061\u0063\u0069\u006e\u0067": 0x4b, 'align': "\u0063\u0065\u006e\u0074\u0065\u0072" }); _0x224b22['height'] = 0x3c - 0x4; _0x224b22['style']['letterSpacing'] = _0x224b22['width'] > 0x1f4 ? _0x224b22['style']['letterSpacing'] < 0xc ? 0x4b / 0xb * (0xb - _0x224b22['text']['length']) : 0x0 : 0x4b / 0x7 * (0xb - _0x224b22['text']['length']); _0x224b22['width'] = _0x224b22["\u0077\u0069\u0064\u0074\u0068"] > 0x1f4 ? 0x1f4 : _0x224b22['width']; _0x224b22['anchor']['set'](0.5); _0x224b22['position']['set'](sizeComp[0x0] + sizeComp[0x2] / 0x2, sizeComp[0x1] + sizeComp[0x3] / 0x2); const _0x27e184 = new PIXI['Text']("\u95F4\u65F6\u52A1\u670D\u8F66\u73ED\u672B\u9996".split("").reverse().join(""), { 'fill': '#FFF', 'fontFamily': 'FZZZHONGJW', 'fontSize': 0x32, "\u0066\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074": 'bold', 'lineHeight': 0x5f, 'letterSpacing': 0x1b, 'align': 'center' }); _0x27e184['_width'] = 0x1cc; _0x27e184['anchor']['set'](0.5); _0x27e184['position']['set'](sizeTiHead[0x0] + sizeTiHead[0x2] / 0x2, sizeTiHead[0x1] + sizeTiHead[0x3] / 0x2); const _0x4c24c0 = new PIXI['Text']("\u4EF7\u7968\u7A0B\u5355\u8DEF\u7EBF\u672C".split("").reverse().join(""), { 'fill': "\u0023\u0046\u0046\u0046", 'fontFamily': "\u0046\u005a\u005a\u005a\u0048\u004f\u004e\u0047\u004a\u0057", 'fontSize': 0x32, 'fontWeight': 'bold', 'lineHeight': 0x8c, 'letterSpacing': 0x5, "\u0061\u006c\u0069\u0067\u006e": 'center' }); _0x4c24c0['width'] = sizePriHead[0x2] * 0.85; _0x4c24c0["\u0061\u006e\u0063\u0068\u006f\u0072"]['set'](0.5); _0x4c24c0['position']["\u0073\u0065\u0074"](sizePriHead[0x0] + sizePriHead[0x2] / 0x2, sizePriHead[0x1] + sizePriHead[0x3] / 0x2); _0x65b651['addChild'](_0x16ffbf, _0xe3bb4, _0x224b22, _0x27e184, _0x4c24c0); let _0xbda56e = await PIXI['Assets']["\u006c\u006f\u0061\u0064\u0042\u0075\u006e\u0064\u006c\u0065"]("noci-daol".split("").reverse().join("")); const _0x873b27 = _0xbda56e["\u0069\u0063\u006f\u006e\u005f\u0049\u006e\u0066\u006f"]; _0x873b27['frame'] = new PIXI['Rectangle'](0x0, 0x0, 0x12c, 0x12c); let _0x16e13f = new PIXI['Sprite'](_0x873b27); _0x16e13f['anchor']["\u0073\u0065\u0074"](0.5, 0.5); _0x16e13f['setTransform']((_0x16ffbf["\u0078"] - 0xe6 - sizeComp[0x0]) / 0x3 + sizeComp[0x0], (_0x16ffbf['height'] + _0xe3bb4['height']) / 0x2 + _0x16ffbf['y'], (_0x16ffbf['height'] + _0xe3bb4['height']) / 0xdc, (_0x16ffbf['height'] + _0xe3bb4['height']) / 0xdc); _0x65b651['addChild'](_0x16e13f); let _0x1cfea5 = await PIXI['Assets']['loadBundle']("JGJN-daol".split("").reverse().join("")); const _0x22f776 = _0x1cfea5['Element']; _0x22f776['frame'] = new PIXI['Rectangle'](0x0, 0x0, 0x384, 0x96); let _0x3420aa = new PIXI['Sprite'](_0x22f776); _0x3420aa['anchor']['set'](0x1, 0x0); _0x3420aa['setTransform'](lineX[0x3] + 0x5a, (_0x16ffbf['height'] + _0xe3bb4['height']) / 0x2 + _0x16ffbf['y'], 1.3, 1.3); _0x65b651['addChild'](_0x3420aa); _0x65b651['addChild'](_0x433f2e()); function _0x433f2e() { const _0x302efb = new PIXI['Container'](); _0x302efb['width'] = sizeComp[0x2]; _0x302efb['height'] = sizeComp[0x3]; _0x302efb['position']['set'](sizeLineNo[0x0], sizeLineNo[0x1]); const _0x3241d8 = new PIXI['Text'](Data['lineNo'], { 'fill': '#FFF', 'fontFamily': 'YGYXSZITI,\x20TNR,\x20Times\x20New\x20Roman,\x20Times,\x20serif', 'fontSize': 0xf0, 'align': 'center' }); _0x3241d8['style']['letterSpacing'] = _0x3241d8['width'] > 0x104 ? -0x5 : 0x0; _0x3241d8['width'] = _0x3241d8['width'] > 0x104 ? 0x104 : _0x3241d8['width']; _0x3241d8['height'] = Data['isSeg'] ? _0x3241d8['height'] * 0.8 : _0x3241d8['height']; _0x3241d8['anchor']['set'](0.5); _0x3241d8['x'] = sizeLineNo[0x2] / 0x2; _0x3241d8['y'] = Data['isSeg'] ? sizeLineNo[0x3] / 2.7 : sizeLineNo[0x3] / 2.1; if (Data['isSeg']) { const _0x174ad7 = new PIXI["\u0054\u0065\u0078\u0074"]("]\u4EF7\u8BA1\u6BB5\u5206[".split("").reverse().join(""), { "\u0066\u0069\u006c\u006c": '#FFF', 'fontFamily': 'MicrosoftYaHei', 'fontSize': 0x28, 'fontWeight': "\u0062\u006f\u006c\u0064", 'letterSpacing': 0xa }); _0x174ad7['anchor']['set'](0.5); _0x174ad7['x'] = sizeLineNo[0x2] / 0x2; _0x174ad7['y'] = sizeLineNo[0x3] / 2.7 * 2.2; _0x302efb["\u0061\u0064\u0064\u0043\u0068\u0069\u006c\u0064"](_0x174ad7); } ext = Data['isSeg'] ? '路线路图\x0a及\x0a计价站点' : '路线路图'; const _0x3a1cc8 = new PIXI['Text'](ext, { 'fill': colorJN, 'fontFamily': 'MicrosoftYaHei', 'fontSize': 0x46, 'fontWeight': 'bold', 'lineHeight': 0x50, "\u0061\u006c\u0069\u0067\u006e": 'center' }); _0x3a1cc8['width'] = _0x3a1cc8['width'] > 0xdc ? 0xdc : _0x3a1cc8['width']; _0x3a1cc8['height'] = _0x3a1cc8["\u0068\u0065\u0069\u0067\u0068\u0074"] > 0xd2 ? 0xc8 : _0x3a1cc8['height']; _0x3a1cc8["\u0061\u006e\u0063\u0068\u006f\u0072"]['set'](0.5); _0x3a1cc8['position']['set'](sizeLineNo[0x2] + (sizeComp[0x2] - sizeLineNo[0x2]) / 0x2, sizeLineNo[0x3] / 0x2); _0x302efb['addChild'](_0x3241d8, _0x3a1cc8); return _0x302efb; } return _0x65b651; } async function printService() { const _0x41cb1f = new PIXI['Container'](); _0x41cb1f['width'] = sizeTi[0x2]; _0x41cb1f['height'] = sizeTi[0x3]; _0x41cb1f['position']['set'](sizeTi[0x0], sizeTi[0x1]); const _0xb319da = [0xf0, 0xaa]; const _0x170ec1 = [(sizeTi[0x2] - _0xb319da[0x0] * 0x2) / 0x3, (sizeTi[0x3] - _0xb319da[0x1]) / 0x2]; const _0x597d62 = new PIXI['TextStyle']({ 'align': 'justify', 'fontFamily': 'FZHTJW', 'fontSize': 0x2d, 'fontWeight': "\u0037\u0030\u0030", 'lineHeight': 0x32 }); const _0x289714 = new PIXI['TextStyle']({ 'align': 'right', 'fontFamily': 'FZHTJW', "\u0066\u006f\u006e\u0074\u0053\u0069\u007a\u0065": 0x23, 'fontWeight': "\u0037\u0030\u0030", 'lineHeight': 0x37 }); const _0x42af90 = new PIXI['Container'](); _0x42af90["\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"]['set'](_0x170ec1[0x0], _0x170ec1[0x1]); _0x41cb1f['addChild'](_0x42af90); _0x582f6d(Data['point']['A']['name'], _0x42af90); _0xd55331(_0x17c748(Data['point']['A']['startTime']), _0x17c748(Data['point']["\u0041"]['endTime']), _0x42af90); const _0x54de28 = new PIXI['Container'](); _0x54de28['position']['set'](_0x170ec1[0x0] * 0x2 + _0xb319da[0x0], _0x170ec1[0x1]); _0x41cb1f['addChild'](_0x54de28); _0x582f6d(Data['point']['Z']['name'], _0x54de28); _0xd55331(_0x17c748(Data['point']['Z']['startTime']), _0x17c748(Data['point']['Z']['endTime']), _0x54de28); return _0x41cb1f; function _0x582f6d(_0x4a29b8, _0x1fe127) { const _0x3d3cf9 = new PIXI['Text'](_0x4a29b8, _0x597d62); _0x3d3cf9['anchor']['set'](0.5, 0x0); _0x3d3cf9["\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"]['set'](_0xb319da[0x0] / 0x2, 0x0); if (_0x3d3cf9['width'] > _0xb319da[0x0]) { _0x3d3cf9['width'] = _0xb319da[0x0]; } else { const _0xc14c86 = _0x597d62['clone'](); _0xc14c86['letterSpacing'] = (_0xb319da[0x0] - _0x3d3cf9['width']) / _0x3d3cf9['text']['length']; _0x3d3cf9['style'] = _0xc14c86; _0x3d3cf9['width'] = _0x3d3cf9['width']; } _0x1fe127['addChild'](_0x3d3cf9); } function _0xd55331(_0xc39380, _0x276b61, _0x2ed07b) { const _0x42427f = _0x289714['clone'](); _0x42427f['align'] = "tfel".split("").reverse().join(""); const _0x5f5c12 = _0xb319da[0x1] - _0x2ed07b['children'][0x0]['height']; const _0x24d66e = new PIXI['Text']("\uFF1A\u8F66\u73ED\u9996".split("").reverse().join(""), _0x42427f); _0x24d66e['anchor']['set'](0x0, 0x1); _0x24d66e['position']['set'](_0xb319da[0x0] / 0xa, _0x5f5c12); _0x24d66e['width'] *= 0.8; _0x2ed07b['addChild'](_0x24d66e); const _0x5b0272 = new PIXI['Text']('末班车：', _0x42427f); _0x5b0272['position']['set'](_0xb319da[0x0] / 0xa, _0x5f5c12); _0x5b0272['width'] *= 0.8; _0x2ed07b['addChild'](_0x5b0272); const _0x56227f = new PIXI['Text'](_0xc39380, _0x289714); _0x56227f['anchor']['set'](0x1, 0x1); _0x56227f['position']['set'](_0xb319da[0x0] - _0xb319da[0x0] / 0xa, _0x5f5c12); _0x56227f['width'] *= 0.8; _0x2ed07b['addChild'](_0x56227f); const _0x15c29d = new PIXI['Text'](_0x276b61, _0x289714); _0x15c29d['anchor']['set'](0x1, 0x0); _0x15c29d['position']['set'](_0xb319da[0x0] - _0xb319da[0x0] / 0xa, _0x5f5c12); _0x15c29d['width'] *= 0.8; _0x2ed07b['addChild'](_0x15c29d); } function _0x17c748(_0x26073b) { if (_0x26073b["\u0073\u006c\u0069\u0063\u0065"](0x0, 0x1) == '0') { return _0x26073b['slice'](0x1); } else { return _0x26073b; } } } async function printStation() { const _0x38b4ca = new PIXI['Container'](); let _0xd41e5f = await PIXI['Assets']['loadBundle']('load-NJGJ'); const _0x1c99de = _0xd41e5f['Element']; const _0x35df43 = _0xd41e5f['Metro']; P = _0x5a962a(Data); sizeP = [P['x'], P['y'], P['width'], P['height']]; _0x38b4ca['addChild'](P); let _0x41c80f = []; const _0x511b8e = _0x4c63d4 => { let _0x23fce2 = 0x0; for (let _0xa685fd in _0x4c63d4) { const _0x1a2dba = (_0x5c9310, _0x4b554d) => { _0x41c80f['push'](_0x5c9310); return _0x4b554d == !![] ? 0x12c * (iconScaleSt[0x2] - iconScaleSt[0x1]) / 0x2 : 0x12c * (iconScaleSt[0x2] - iconScaleSt[0x1]); }; _0x23fce2 = (Data['station'][_0xa685fd]['isStart'] || Data['station'][_0xa685fd]['isEnd']) && Data['station'][_0xa685fd]['isSingle'] ? _0x23fce2 + _0x1a2dba(_0xa685fd, !![]) : _0x23fce2; _0x23fce2 = (Data['station'][_0xa685fd]['isStart'] || Data['station'][_0xa685fd]['isEnd']) && _0xa685fd != 0x0 && _0xa685fd != Object['keys'](Data['station'])['length'] - 0x1 ? _0x23fce2 + _0x1a2dba(_0xa685fd, ![]) : _0x23fce2; } return _0x23fce2; }; const _0x2e0f57 = new Map(Object['entries'](Data['station'])); let _0x1b4d65 = (lineX[0x3] - lineX[0x0] - _0x511b8e(Data['station'])) / (_0x2e0f57['size'] - 0x1); let _0x4c501e = lineY[0x2] - lineY[0x1]; let _0x2403ae = 0x0; let _0x3a8234 = 0x0; for (let [_0x4f8fea, _0x1826ef] of _0x2e0f57['entries']()) { _0x3a8234 = 0x0; S = await _0x416e5d(_0x1826ef); S['position']['set'](0x302 + _0x1b4d65 * _0x4f8fea + _0x2403ae, lineY[0x0]); S['x'] = _0x1826ef['isStart'] && _0x1826ef['isSingle'] ? S['x'] + S['width'] / 0x2 : S['x']; S['x'] = _0x1826ef['isEnd'] && _0x1826ef['isSingle'] ? S['x'] - S['width'] / 0x2 : S['x']; _0x2403ae = (_0x1826ef["\u0069\u0073\u0045\u006e\u0064"] || _0x1826ef['isStart']) && _0x41c80f['includes'](_0x4f8fea) ? _0x2403ae + 0x12c * (iconScaleSt[0x2] - iconScaleSt[0x1]) / 0x2 : _0x2403ae; _0x2403ae = (!_0x1826ef['isEnd'] || !_0x1826ef['isStart']) && _0x41c80f['includes'](_0x4f8fea) ? _0x2403ae + 0x12c * (iconScaleSt[0x2] - iconScaleSt[0x1]) : _0x2403ae; S['y'] = S['x'] > lineX[0x1] && S['x'] < lineX[0x2] ? S['y'] + (S['x'] - lineX[0x1]) / (lineX[0x2] - lineX[0x1]) * _0x4c501e : S['y']; S['y'] = S['x'] >= lineX[0x2] ? lineY[0x3] : S['y']; S['angle'] = S['x'] > lineX[0x1] && S['x'] < lineX[0x2] ? lineAngle : S['angle']; _0x3a8234 = _0x1826ef['isSingle'] ? _0x1826ef['sign']['direction'] ? 0x8 : -0x8 : 0x0; S['y'] += _0x3a8234; T = _0x388352(_0x1826ef); T['position']['set'](S['x'], S['y'] + 0x37 - _0x3a8234); M = await _0x4aef57(_0x1826ef, T['width']); if (M) { T['height'] = T['x'] + T['width'] / 0x2 > sizeP[0x0] && T['x'] - T['width'] / 0x2 < sizeP[0x0] + sizeP[0x2] ? sizeP[0x1] - T['y'] - T['height'] - M['height'] < 0x0 ? sizeP[0x1] - T['y'] - M['height'] : T['height'] : T['height']; T['height'] = T["\u0079"] + T['height'] + M['height'] > sizePriLineNew[0x1] ? sizePriLineNew[0x1] - T['y'] - M['height'] : T['height']; M['position']['set'](T['x'] - T['width'] / 0x2, T['y'] + T['height'] + 0xa); _0x38b4ca['addChild'](M); } else { T['height'] = T['x'] + T['width'] / 0x2 > sizeP[0x0] && T['x'] - T['width'] / 0x2 < sizeP[0x0] + sizeP[0x2] ? sizeP[0x1] - T['y'] - T['height'] < 0x0 ? sizeP[0x1] - T['y'] : T['height'] : T['height']; T['height'] = T['y'] + T['height'] > sizePriLineNew[0x1] ? sizePriLineNew[0x1] - T['y'] : T['height']; } _0x38b4ca['addChild'](S, T); } return _0x38b4ca; async function _0x4aef57(_0x2f2f2b, _0x2c90bf) { const _0x35847c = new PIXI['Container'](); if (_0x2f2f2b['isMetro']) { const _0x43fa54 = _0x35df43['clone'](); _0x43fa54['frame'] = new PIXI['Rectangle'](0x0, 0x3e8, 0xc8, 0xc8); icon = new PIXI['Sprite'](_0x43fa54); icon['name'] = 'metroIcon'; _0x35847c['addChild'](icon); _0x2f2f2b['metro']['forEach'](_0x7544d4 => { _0x35847c['name'] = _0x35847c['name'] ? _0x35847c['name'] + '/' + _0x7544d4 : _0x7544d4; const _0x4c8d1f = _0x35df43['clone'](); switch (String(_0x7544d4)) { case '1': case '2': case '3': case '4': case '5': case '6': _0x4c8d1f['frame'] = new PIXI['Rectangle'](0xc8 * (Number(_0x7544d4) - 0x1), 0x0, 0xc8, 0xc8); break; case 'S1': case "2S".split("").reverse().join(""): case "3S".split("").reverse().join(""): case 'S4': case "5S".split("").reverse().join(""): case 'S6': _0x4c8d1f['frame'] = new PIXI['Rectangle'](0xc8 * (Number(_0x7544d4['replace']('S', '')) - 0x1), 0x258, 0xc8, 0xc8); break; case "7S".split("").reverse().join(""): case 'S8': case 'S9': _0x4c8d1f['frame'] = new PIXI['Rectangle'](0xc8 * (Number(_0x7544d4['replace']('S', "".split("").reverse().join(""))) - 0x7), 0x320, 0xc8, 0xc8); break; case '7': case '8': case '9': case '10': case '11': case "21".split("").reverse().join(""): _0x4c8d1f['frame'] = new PIXI['Rectangle'](0xc8 * (Number(_0x7544d4) - 0x7), 0xc8, 0xc8, 0xc8); break; case '13': case "41".split("").reverse().join(""): case '15': case "61".split("").reverse().join(""): case '17': case "81".split("").reverse().join(""): _0x4c8d1f['frame'] = new PIXI['Rectangle'](0xc8 * (Number(_0x7544d4) - 0xd), 0x190, 0xc8, 0xc8); break; }icon = new PIXI['Sprite'](_0x4c8d1f); icon['name'] = "enil".split("").reverse().join("") + _0x7544d4; icon['position']['set'](0x0, _0x35847c['height']); _0x35847c['addChild'](icon); }); _0x35847c['scale']['set'](_0x2c90bf / 0xc8); return _0x35847c; } } async function _0x416e5d(_0x46508a) { if (_0x46508a['isSingle']) { let _0x40b429 = [0x0, 0x1f4, 0x15e, 0xc8]; _0x40b429[0x0] = _0x46508a['isStart'] || _0x46508a['sign']['convert'] ? 0x15e : _0x40b429[0x0]; _0x40b429[0x1] = _0x46508a['sign']['direction'] == 0x1 ? _0x40b429[0x1] + 0xc8 : _0x40b429[0x1]; const _0x3ba9a5 = _0x1c99de['clone'](); _0x3ba9a5['frame'] = new PIXI['Rectangle'](_0x40b429[0x0], _0x40b429[0x1], _0x40b429[0x2], _0x40b429[0x3]); icon = new PIXI['Sprite'](_0x3ba9a5); icon['anchor']['set'](0.5, 0x0); if (_0x46508a['sign']['direction'] == 0x0) { icon['anchor']['set'](0.5, 0x1); } icon['scale']['set'](0.15); if (_0x46508a['isStart'] || _0x46508a['isEnd']) { icon['scale']['set'](0.25); } return icon; } if (_0x46508a['isStart'] || _0x46508a['isEnd']) { let _0x104739 = [0x0, 0x96, 0x15e, 0x15e]; _0x104739[0x0] = typeof _0x46508a['sign'] !== 'undefined' && _0x46508a['sign']['convert'] ? 0x15e : _0x104739[0x0]; const _0x1c87b0 = _0x1c99de['clone'](); _0x1c87b0['frame'] = new PIXI['Rectangle'](_0x104739[0x0], _0x104739[0x1], _0x104739[0x2], _0x104739[0x3]); icon = new PIXI['Sprite'](_0x1c87b0); icon['anchor']['set'](0.5); if (typeof _0x46508a['sign'] !== 'undefined' && _0x46508a['sign']['direction'] == 0x0 || _0x46508a['isEnd']) { icon['angle'] = 0xb4; } icon['scale']['set'](0.25); return icon; } let _0x5144f9 = [0x2bc, 0x96, 0x15e, 0x15e]; const _0x1c1139 = _0x1c99de['clone'](); _0x1c1139['frame'] = new PIXI['Rectangle'](_0x5144f9[0x0], _0x5144f9[0x1], _0x5144f9[0x2], _0x5144f9[0x3]); icon = new PIXI["\u0053\u0070\u0072\u0069\u0074\u0065"](_0x1c1139); icon['anchor']['set'](0.5); icon['scale']['set'](0.15); if (_0x46508a['isStart'] || _0x46508a['isEnd']) { icon['scale']['set'](0.25); } return icon; } function _0x388352(_0xf38d49) { const _0x4e51c7 = new PIXI['TextStyle']({ 'align': 'center', 'fill': colorJN, 'fontFamily': 'FZHTJW,SimHei', 'fontSize': 0x30, 'lineHeight': 0x30 }); const _0x28ab3a = _0x1d2c7f => { _0x1d2c7f = _0x1d2c7f['replace']('（', '︵')['replace']('）', '︶')['replace']('(', '︵')['replace'](')', '︶'); return _0x1d2c7f['split']("".split("").reverse().join(""))['join']('\x0a'); }; const _0x2516b6 = new PIXI['Text'](_0x28ab3a(_0xf38d49['name']), _0x4e51c7); _0x2516b6['anchor']['set'](0.5, 0x0); if (_0xf38d49['isStart'] || _0xf38d49['isEnd'] || _0xf38d49['text'] && _0xf38d49['text']['color']) { _0x2516b6['style']['fill'] = (_0xf38d49['text'] ? _0xf38d49['text']['color'] : ![]) || "der".split("").reverse().join(""); } return _0x2516b6; } function _0x5a962a(_0x5039b4) { const _0x65fbc3 = new PIXI['Container'](); _0x65fbc3['position']['set'](0x384, 0x352); const _0x56c113 = new PIXI['TextStyle']({ 'align': 'center', 'fill': 'red', 'fontFamily': 'FZHTJW,SimHei', 'fontSize': 0x41 }); const _0x3e746a = new PIXI['Text']('说明:\x20', _0x56c113); const _0x410137 = new PIXI['Text']("\u70B9\u7AD9\u9760\u505C\u5411\u5355 ".split("").reverse().join(""), _0x56c113); const _0x4d0516 = new PIXI['Text']('\x20换乘地铁站点', _0x56c113); const _0x230598 = _0x1c99de['clone'](); _0x230598['frame'] = new PIXI['Rectangle'](0x2bc, 0x1f4, 0x15e, 0xc8); icon1 = new PIXI['Sprite'](_0x230598); icon1['position']['set'](_0x3e746a['width'], _0x3e746a['height'] / 0x8); icon1['scale']['set'](_0x3e746a['height'] / 0x12c); const _0x29755a = _0x35df43['clone'](); _0x29755a['frame'] = new PIXI['Rectangle'](0x0, 0x3e8, 0xc8, 0xc8); icon2 = new PIXI['Sprite'](_0x29755a); icon2['anchor']['set'](0.5, 0x0); icon2['position']['set'](_0x3e746a['width'] + icon1['width'] / 0x2, _0x3e746a['height']); icon2['scale']['set'](_0x3e746a['height'] / 0xc8); _0x410137['position']['set'](_0x3e746a['width'] + icon1['width'], 0x0); _0x4d0516['position']['set'](_0x3e746a['width'] + icon1['width'], _0x3e746a['height']); _0x65fbc3['addChild'](_0x3e746a, icon1, icon2, _0x410137, _0x4d0516); return _0x65fbc3; } } function loadData() { _0x5ceba7(); if (Data['isSeg']) _0x3e79d6(); function _0x3e79d6() { sizeLineNo[0x1] = sizeLineNo[0x1] - 0x23; sizeLineNo[0x3] = sizeLineNo[0x3] + 0x23; sizePriHead[0x2] = 0xfa; sizePriLine = [sizeComp[0x0] + sizeComp[0x2], sizePriHead[0x1] + sizePriHead[0x3], sizeComp[0x2] - sizePriHead[0x2], sizePriHead[0x3] / 0xa]; } function _0x5ceba7() { sizeLineNo = [0x64, 0x145, 0x127, 0xbe]; sizePriHead = [0x64, 0x384, 0x159, 0x64]; sizePriLine = [sizeComp[0x0] + sizeComp[0x2], sizePriHead[0x1] + sizePriHead[0x3], sizeComp[0x2] - sizePriHead[0x2], sizePriHead[0x3] / 0xa]; } } function pixiClear() { ramp['stage']['removeChildren'](); loadData(); buildMap(); }